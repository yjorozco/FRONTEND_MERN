{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","event","touchHandler","id","onInput","useEffect","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","fileIsValid","pickedFile","files","console","log","center","src","altl","onClick","current","click","NewPlace","useHttpClient","isLoading","sendRequest","error","auth","clearError","useContext","AuthContext","history","useHistory","title","description","address","image","inputHandler","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","Fragment","asOverlay","onSubmit","disabled"],"mappings":"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","file":"static/js/5.7f2a778e.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, {useReducer, useEffect} from 'react';\n\nimport './Input.css';\nimport {validate} from '../../util/validators';\n\nconst inputReducer = ( state, action ) =>{\n    switch(action.type){\n        case 'CHANGE':\n            return {\n                ...state,\n                value:action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH':\n            return{\n                ...state,\n                isTouched: true\n\n            }\n        default:\n            return state;\n    }\n}\n\n\nconst Input = props => {\n\n    const [inputState, dispatch]=useReducer(inputReducer, {value:props.initialValue || '', isValid:props.initialValid||false, isTouched: false});\n\n    const changeHandler = event => {\n        dispatch({type:'CHANGE', val:event.target.value, validators:props.validators})\n    }\n    const touchHandler = () =>{\n        dispatch({type:'TOUCH'});\n    }\n    const {id, onInput} = props;\n    const {value, isValid} =  inputState;\n    useEffect(()=>{\n        onInput(id, value, isValid);\n    },[id, value, isValid,onInput])\n    const element = props.element === 'input' ? <input type={props.type} placeholder={props.placeholder} onChange={changeHandler} onBlur={touchHandler} value={inputState.value}/> :\n        <textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} value={inputState.value} onBlur={touchHandler} />\n    return (<div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n        <label htmlFor={props.id}>\n            {props.label}</label>\n        {element}\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>)\n\n}\n\nexport default Input;","import  { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) =>{\n\n    switch(action.type){\n        case 'INPUT_CHANGE':\n            let formIsValid= true;\n            for(let inputId in state.inputs){\n                if(!state.inputs[inputId]){\n                    continue;\n                }\n                if(inputId===action.inputId){\n                    formIsValid=(formIsValid&&action.isValid);\n                }else{\n                    formIsValid=(formIsValid&& state.inputs[inputId].isValid);\n                }\n            }\n            return {\n                ...state,\n                inputs:{\n                    ...state.inputs,\n                    [action.inputId]:{\n                        value:action.value, \n                        isValid:action.isValid\n                    }\n                },\n                isValid:formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            }\n        default:\n            return state;\n\n    }\n}\n\n\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n\n    const [formState, dispatch]=useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid:initialFormValidity\n    });\n\n    const inputHandler = useCallback((id,value,isValid)=>{\n        dispatch({type:'INPUT_CHANGE', value:value, isValid:isValid, inputId:id})\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity)=>{\n\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        })\n\n    }, []);\n    \n    return [formState, inputHandler, setFormData];\n\n};\n\n","import React, { useRef, useState, useEffect } from 'react';\nimport './ImageUpload.css';\nimport Button from './Button';\nconst ImageUpload = props => {\n\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState();\n    const filePickerRef = useRef();\n\n\n    useEffect(()=>{\n        if(!file){\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () =>{\n            setPreviewUrl(fileReader.result);\n        }\n        fileReader.readAsDataURL(file);\n    }, [file])\n\n    const pickImageHandler = ()=>{\n        filePickerRef.current.click();\n    }\n    const pickedHandler = event =>{\n        let fileIsValid;\n        let pickedFile;\n        if(event.target.files && event.target.files.length===1){\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid=true;\n        }else{\n            setIsValid(false);\n            fileIsValid=false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n        console.log(event.target);\n    }\n\n    return (\n        <div className=\"form-control\">\n            <input ref={filePickerRef} id={props.id} style={{ display: \"none\" }} type=\"file\" accept=\".jpg,.png,.jpeg\" onChange={pickedHandler} />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                   {previewUrl&& <img src={previewUrl} altl=\"Preview\" />}\n                   {!previewUrl&& <p>Please pick and image.</p>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>Pick Image</Button>\n            </div>\n            {!isValid&&<p>{props.errorText}</p>}\n        </div>\n    )\n\n}\n\nexport default ImageUpload;","import React, { useContext } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './PlaceForm.css';\nimport Button from '../../shared/components/FormElements/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHistory } from 'react-router-dom';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nconst NewPlace = () => {\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData=new FormData();\n      formData.append( 'title', formState.inputs.title.value);\n      formData.append( 'description', formState.inputs.description.value);\n      formData.append( 'address', formState.inputs.address.value);\n      formData.append( 'image', formState.inputs.image.value);\n      await sendRequest(process.env.REACT_APP_BACKEND_URL+'/places', 'POST', formData, {\n        Authorization: 'Bearer '+auth.token\n      });\n      history.push('/');\n    } catch (err) {\n\n    }\n\n  }\n\n  return (\n    <React.Fragment>\n    {isLoading&&<LoadingSpinner asOverlay/>}\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input id=\"title\" element=\"input\" type=\"text\" label=\"Title\" validators={[VALIDATOR_REQUIRE()]} errorText=\"Please enter a valid title.\" onInput={inputHandler} />\n        <Input id=\"description\" element=\"textarea\" label=\"Descripion\" validators={[VALIDATOR_MINLENGTH(5)]} errorText=\"Please enter a valid description (at least 5 characters)\" onInput={inputHandler} />\n        <Input id=\"address\" element=\"input\" label=\"Address\" validators={[VALIDATOR_REQUIRE()]} errorText=\"Please enter a valid address\" onInput={inputHandler} />\n        <ImageUpload id='image' onInput={inputHandler} errorText=\"Please provide an image\"/>\n        <Button type=\"submit\" disabled={!formState.isValid} >ADD PLACE</Button>\n      </form>\n    </React.Fragment>\n  )\n}\n\nexport default NewPlace;"],"sourceRoot":""}