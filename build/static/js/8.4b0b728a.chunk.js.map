{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","console","log","to","id","process","name","placeCount","UsersList","items","length","map","user","key","_id","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoaderUsers","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,+LCSEC,G,YAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCiBpCE,EAtBE,SAAAV,GAEb,OADAW,QAAQC,IAAIZ,GAER,wBAAIC,UAAU,aACN,kBAACF,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMc,GAAE,WAAMb,EAAMc,GAAZ,YACJ,yBAAKb,UAAU,oBACX,kBAAC,EAAD,CAAQK,MAAK,UAAKS,qCAAL,YAAyCf,EAAMM,OAASC,IAAKP,EAAMgB,QAEpF,yBAAKf,UAAU,mBACX,4BAAKD,EAAMgB,MACX,4BACKhB,EAAMiB,WADX,IAC6C,IAArBjB,EAAMiB,WAAmB,QAAU,eCexEC,EA5BG,SAAAlB,GAEd,OAA2B,IAAvBA,EAAMmB,MAAMC,OAER,yBAAKnB,UAAU,UACX,kBAACF,EAAA,EAAD,KACI,gDAOZ,wBAAIE,UAAU,cACTD,EAAMmB,MAAME,KAAI,SAAAC,GAAI,OACjB,kBAAC,EAAD,CACIC,IAAKD,EAAKE,IACVV,GAAIQ,EAAKE,IACTlB,MAAOgB,EAAKhB,MACZU,KAAMM,EAAKN,KACXC,WAAYK,EAAKG,OAAOL,c,wBCO7BM,UA1BD,WAAO,IAAD,EACsCC,cAA9CC,EADQ,EACRA,UAAWC,EADH,EACGA,MAAOC,EADV,EACUA,YAAaC,EADvB,EACuBA,WADvB,EAEsBC,oBAAS,GAF/B,mBAETC,EAFS,KAEIC,EAFJ,KAchB,OAXAC,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAEgBN,EAAY,GAAD,OAAIf,yCAAJ,WAF3B,OAELsB,EAFK,OAGXH,EAAeG,EAAaC,OAHjB,uGAAH,qDAMhBC,KACD,CAACT,IAGI,kBAAC,IAAMU,SAAP,KACA,kBAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASX,IAClCH,GACG,yBAAK3B,UAAU,UACX,kBAAC0C,EAAA,EAAD,QAGNf,GAAaK,GAAe,kBAAC,EAAD,CAAWd,MAAOc,IAPhD","file":"static/js/8.4b0b728a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport './UserItem.css';\nimport Avatar from '../../shared/components/UIElements/Avatar'\nimport Card from '../../shared/components/UIElements/Card';\nconst UserItem = props => {\n    console.log(props)\n    return (\n        <li className=\"user-item\">\n                <Card>\n                    <Link to={`/${props.id}/places`}>\n                        <div className=\"user-item__image\">\n                            <Avatar image={`${process.env.REACT_APP_ASSETS_URL}/${props.image}`} alt={props.name} />\n                        </div>\n                        <div className=\"user-item__info\">\n                            <h2>{props.name}</h2>\n                            <h3>\n                                {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n                            </h3>\n                        </div>\n                    </Link>\n                </Card>\n        </li>\n    );\n\n}\n\nexport default UserItem;","import React from 'react';\nimport './UsersList.css';\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nconst UsersList = props => {\n\n    if (props.items.length === 0) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No users Found</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className=\"users-list\">\n            {props.items.map(user => (\n                <UserItem\n                    key={user._id}\n                    id={user._id}\n                    image={user.image}\n                    name={user.name}\n                    placeCount={user.places.length}\n                />\n            ))}\n        </ul>\n    )\n\n}\n\nexport default UsersList;","import React, { useEffect, useState } from 'react';\nimport UsersList from '../components/UsersList'\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nconst Users = () => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedUsers, setLoaderUsers] = useState(false);\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users`);\n                setLoaderUsers(responseData.users);\n            } catch (err) { }\n        }\n        fetchUsers();\n    }, [sendRequest])\n\n\n    return (<React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading &&\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            }\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />};\n        </React.Fragment>)\n\n}\n\nexport default Users;"],"sourceRoot":""}